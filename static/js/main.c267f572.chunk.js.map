{"version":3,"sources":["components/NavBar/NavBar.js","components/Jumbotron/Jumbotron.js","components/About/About.js","utils/API.js","components/Discover/Discover.js","components/Search/Search.js","App.js","serviceWorker.js","index.js"],"names":["NavTabs","react_default","a","createElement","className","react_router_dom","to","window","location","pathname","Jumbotron","Row","Col","About","components_Jumbotron_Jumbotron","API","retrieveDog","axios","get","searchDogs","breed","concat","breedList","Discover","state","search","result","friendCounter","then","res","_this","setState","data","catch","err","console","log","handleClick","e","name","target","randomNum","Math","floor","random","this","md","alt","src","message","onClick","Component","Search","results","handleInputChange","event","value","Object","defineProperty","handleFormSubmit","preventDefault","for","id","onChange","map","key","type","class","dog","App","NavBar","react_router","exact","path","component","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c267f572.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst NavTabs = () => (\n  <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n    <Link className=\"navbar-brand\" to=\"/\">\n      Pupster\n    </Link>\n    <div>\n      <ul className=\"navbar-nav\">\n        <li className=\"nav-item\">\n          <Link\n            to=\"/\"\n            className={\n              window.location.pathname === \"/\" || window.location.pathname === \"/about\"\n                ? \"nav-link active\"\n                : \"nav-link\"\n            }\n          >\n            About\n          </Link>\n        </li>\n        <li className=\"nav-item\">\n          <Link\n            to=\"/discover\"\n            className={\n              window.location.pathname === \"/discover\"\n                ? \"nav-link active\"\n                : \"nav-link\"\n            }\n          >\n            Discover\n          </Link>\n        </li>\n        <li className=\"nav-item\">\n          <Link\n            to=\"/search\"\n            className={\n              window.location.pathname === \"/search\"\n                ? \"nav-link active\"\n                : \"nav-link\"\n            }\n          >\n            Search\n          </Link>\n        </li>\n      </ul>\n    </div>\n  </nav>\n);\n\nexport default NavTabs;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Jumbotron.css\"\nimport { Container, Row, Col } from 'reactstrap';\n\nconst Jumbotron = () => (\n  <div>\n    <div className=\"jumbotron\">\n    </div>\n    <Row>\n      <Col/>\n      <Col>\n        <div>\n          <h2>Welcome to Pupster!</h2>\n          <p>Visit our discover page to see what dogs like you back or view endless pictures of adorable pups on our search page.</p>\n        </div>\n      </Col>\n      <Col/>\n    </Row>\n  </div>\n  \n);\n\nexport default Jumbotron;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Jumbotron from \"../../components/Jumbotron\";\n\nconst About = () => (\n  <Jumbotron/>\n);\n\nexport default About;\n","import axios from \"axios\";\n\nconst discoverURL = \"https://dog.ceo/api/breeds/image/random\";\n\nconst searchURL = \"https://dog.ceo/api/breed/hound/images\"\n\n\nexport default {\n  retrieveDog: function() {\n    return axios.get(discoverURL);\n  },\n\n  searchDogs: function(breed) {\n    return axios.get(`https://dog.ceo/api/breed/${breed}/images`);\n  },\n\n  breedList: function() {\n    return axios.get(\"https://dog.ceo/api/breeds/list\");\n  }\n};\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Container, Row, Col } from 'reactstrap';\nimport API from \"../../utils/API\";\n\nclass Discover extends Component {\n  state = {\n    search: \"\",\n    result: [],\n    friendCounter: 0\n  };\n\n  // When this component mounts, search the Giphy API for pictures of kittens\n  componentDidMount() {\n    this.retrieveDog();\n  }\n\n  retrieveDog = () => {\n    API.retrieveDog()\n      .then(res => this.setState({ result: res.data }))\n      .catch(err => console.log(err));\n  };\n\n  handleClick = e => {\n    const name = e.target.name\n    const randomNum = Math.floor((Math.random() * 5) + 1)\n\n    if(name === \"dislike\"){\n      this.retrieveDog()\n    } else {\n      if(randomNum === 4){\n        this.setState({friendCounter: this.state.friendCounter + 1})\n      }\n      this.retrieveDog()\n    }\n\n    \n\n\n\n    \n  }\n\n\n  render(){\n    return (\n  <div>\n    <Row>\n      <Col/>\n      <Col md=\"5\">\n      <h2>Make New Friends</h2>\n      <p>Like any of the pups you'd like to meet and we'll let you know below if they liked you back!</p>\n        <div>\n        <img\n          alt=\"Dog\"\n          className=\"img-fluid\"\n          src={this.state.result.message}\n        />\n        </div>\n        <button className=\"btn btn-danger\" name=\"dislike\" onClick={this.handleClick}>\n          Dislike\n        </button>{\" \"}\n        <button className=\"btn btn-primary\" name=\"like\" onClick={this.handleClick}>\n          Like\n        </button>\n        <h3>You've made {this.state.friendCounter} puppy friends so far!</h3>\n\n      </Col>\n      <Col/>\n    </Row>\n  </div>\n    );\n  }\n};\n\nexport default Discover;\n","import React, {Component} from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Container, Row, Col } from 'reactstrap';\nimport API from \"../../utils/API\";\nimport \"./Search.css\"\n\nclass Search extends Component {\n    state = {\n        breed: \"\",\n        breedList: [],\n        results: []\n\n    };\n\n    componentDidMount() {\n        this.breedList()\n      }\n\n    handleInputChange = event => {\n        let value = event.target.value;\n        const name = event.target.name;\n        this.setState({\n          [name]: value\n        });\n      };\n\n      breedList = () => {\n        API.breedList()\n          .then(res => this.setState({ breedList: res.data.message }))\n          .catch(err => console.log(err));\n      };\n\n    searchDogs = (breed) => {\n        API.searchDogs(breed)\n          .then(res => this.setState({ results: res.data.message }))\n          .catch(err => console.log(err));\n      };\n\n    handleFormSubmit = event => {\n        event.preventDefault();\n        this.searchDogs(this.state.breed)\n      };\n\n\n render(){\n return(\n\n        <div>\n            <Col/>\n            <Col md=\"8\">\n                <form>\n                    <div className=\"form-group\">\n                        <label for=\"exampleFormControlSelect1\">Select a Breed</label>\n                        \n                        <select className=\"form-control\" id=\"exampleFormControlSelect1\" name=\"breed\" value={this.state.breed} onChange={this.handleInputChange}>\n                        {this.state.breedList.map(breed => (\n                            \n                        <option name=\"breed\" value={breed} key={breed}>{breed}</option>\n                        ))}\n                        </select>\n                        \n                    </div>\n                    <button type=\"submit\" class=\"btn btn-primary mb-2\" onClick={this.handleFormSubmit}>Search</button>\n                </form>\n                {this.state.results.map(dog =>(\n                <div className=\"dogBox\">\n                    <img\n                    alt=\"Dog\"\n                    className=\"img-fluid\"\n                    src={dog}\n                    />\n                </div>\n                ))}\n            </Col>\n            <Col/>\n        </div>\n    )\n  }\n};\n\nexport default Search;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport NavBar from \"./components/NavBar\";\nimport About from \"./components/About\";\nimport Discover from \"./components/Discover\";\nimport Search from \"./components/Search\";\n\nconst App = () => (\n  <Router>\n    <div>\n      <NavBar />\n      <Route exact path=\"/\" component={About} />\n      <Route exact path=\"/about\" component={About} />\n      <Route path=\"/discover\" component={Discover} />\n      <Route exact path=\"/search\" component={Search} />\n    </div>\n  </Router>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}